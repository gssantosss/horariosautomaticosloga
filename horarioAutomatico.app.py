import os
import pandas as pd

# nome do arquivo esperado
file_name = "upload.xlsx"

# diret√≥rio atual onde o script est√° rodando
print("Diret√≥rio atual:", os.getcwd())
print("Arquivos encontrados:", os.listdir())

# checa se o arquivo existe
if not os.path.exists(file_name):
    print(f"‚ùå Arquivo '{file_name}' n√£o encontrado no diret√≥rio atual.")
    print("Coloque o arquivo no mesmo diret√≥rio ou use o caminho completo.")
    exit()

# l√™ a planilha
df = pd.read_excel(file_name)
print("‚úÖ Planilha carregada com sucesso!")
print("Colunas encontradas:", df.columns.tolist())

# filtrar s√≥ colunas que come√ßam com "HORARIO"
horario_cols = [col for col in df.columns if col.upper().startswith("HORARIO")]

if not horario_cols:
    print("‚ùå Nenhuma coluna de hor√°rio encontrada no arquivo.")
    exit()

# transformar hor√°rios em datetime
for col in horario_cols:
    df[col] = pd.to_datetime(df[col], errors="coerce").dt.time

# fun√ß√£o para analisar cada coluna de hor√°rios
def analisar_horarios(series):
    series = series.dropna().sort_values()
    if series.empty:
        return None
    
    horarios = pd.to_datetime(series.astype(str))
    menor = horarios.min().strftime("%H:%M")
    maior = horarios.max().strftime("%H:%M")

    gaps = []
    for i in range(len(horarios) - 1):
        diff = (horarios.iloc[i+1] - horarios.iloc[i]).total_seconds() / 60
        if diff >= 10:  # s√≥ gaps >= 10 min
            gaps.append(f"{horarios.iloc[i].strftime('%H:%M')} ‚Üí {horarios.iloc[i+1].strftime('%H:%M')} ({int(diff)} min)")

    return {
        "menor": menor,
        "maior": maior,
        "gaps": gaps
    }

# rodar an√°lise por coluna
for col in horario_cols:
    resultado = analisar_horarios(df[col])
    print(f"\nüìÖ {col}:")
    if resultado:
        print(f" - Menor hor√°rio: {resultado['menor']}")
        print(f" - Maior hor√°rio: {resultado['maior']}")
        if resultado['gaps']:
            print(" - Gaps ‚â• 10 min:")
            for g in resultado['gaps']:
                print(f"   {g}")
        else:
            print(" - Nenhum gap ‚â• 10 min encontrado")
    else:
        print(" - Sem hor√°rios v√°lidos")
